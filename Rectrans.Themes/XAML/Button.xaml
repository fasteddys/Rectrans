<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="PrimaryBlueColor" Color="#304FFE" />
    <SolidColorBrush x:Key="PrimaryTextColor" Color="#FFFFFF" />

    <SolidColorBrush x:Key="ButtonMouseOverColor" Color="#0026CA" />

    <SolidColorBrush x:Key="ButtonPressedColor" Color="#7A7CFF" />

    <SolidColorBrush x:Key="ButtonBorderBrushColor" Color="#0026CA" />

    <SolidColorBrush x:Key="PrimaryDarkTextColor" Color="#0026CA" />

    <!-- Start: PrimaryButtonStyle -->
    <Style x:Key="PrimaryButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBlueColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
        <Setter Property="Padding" Value="4 2" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="5"
                            Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            MaxHeight="{TemplateBinding MaxHeight}"
                            MinHeight="{TemplateBinding MinHeight}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="presenter" Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True" />

                        <Border.Effect>
                            <DropShadowEffect ShadowDepth=".5" Direction="0"
                                              Opacity=".3" />
                        </Border.Effect>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background"
                                    Value="{DynamicResource ButtonMouseOverColor}" />

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background"
                                    Value="{DynamicResource ButtonPressedColor}">

                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: PrimaryButtonStyle -->

    <!-- Start: SecondaryButtonStyle -->
    <Style x:Key="SecondaryButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryDarkTextColor}" />
        <Setter Property="Padding" Value="3 1" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="5"
                            Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            MaxHeight="{TemplateBinding MaxHeight}"
                            MinHeight="{TemplateBinding MinHeight}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="presenter" Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True" />
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth=".5" Direction="0"
                                              Opacity=".3" />
                        </Border.Effect>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background"
                                    Value="{DynamicResource ButtonMouseOverColor}" />
                            <Setter TargetName="border" Property="BorderBrush"
                                    Value="{DynamicResource PrimaryBlueColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background"
                                    Value="{DynamicResource ButtonPressedColor}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource PrimaryTextColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: SecondaryButtonStyle -->

    <!-- Start: TertiaryButtonStyle -->
    <Style x:Key="TertiaryButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryTextColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryDarkTextColor}" />
        <Setter Property="Padding" Value="4 2" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="5"
                            Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            MaxHeight="{TemplateBinding MaxHeight}"
                            MinHeight="{TemplateBinding MinHeight}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="presenter" Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True" />

                        <Border.Effect>
                            <DropShadowEffect ShadowDepth=".5" Direction="0"
                                              Opacity=".3" />
                        </Border.Effect>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background"
                                    Value="{DynamicResource ButtonMouseOverColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background"
                                    Value="{DynamicResource ButtonPressedColor}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource PrimaryTextColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: TertiaryButtonStyle -->

    <!-- Start: IconButtonStyle -->
    <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBlueColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="12 6 12 6" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MaxHeight" Value="40" />
        <Setter Property="MaxWidth" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="40" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="5"
                            Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            MaxHeight="{TemplateBinding MaxHeight}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Padding="{TemplateBinding Padding}">

                        <Path x:Name="icon"
                              Data="M11,3L11,11 3,11 3,13 11,13 11,21 13,21 13,13 21,13 21,11 13,11 13,3 11,3z"
                              Fill="{DynamicResource PrimaryTextColor}" Height="16" Width="16" Stretch="UniformToFill" />
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth=".5" Direction="0"
                                              Opacity=".3" />
                        </Border.Effect>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background"
                                    Value="{DynamicResource ButtonMouseOverColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background"
                                    Value="{DynamicResource ButtonPressedColor}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource PrimaryTextColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: IconButtonStyle -->

    <!-- Start: Icon + Text ButtonStyle -->
    <Style x:Key="IconTextButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBlueColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="12 6 12 6" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MaxHeight" Value="40" />
        <Setter Property="MinHeight" Value="40" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="5"
                            Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            MaxHeight="{TemplateBinding MaxHeight}"
                            MinHeight="{TemplateBinding MinHeight}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Path Grid.Column="0" x:Name="icon"
                                  Data="M11,3L11,11 3,11 3,13 11,13 11,21 13,21 13,13 21,13 21,11 13,11 13,3 11,3z"
                                  Fill="{DynamicResource PrimaryTextColor}" Height="16" Width="16"
                                  Stretch="UniformToFill" />

                            <ContentPresenter Grid.Column="1" x:Name="presenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True" />
                        </Grid>

                        <Border.Effect>
                            <DropShadowEffect ShadowDepth=".5" Direction="0"
                                              Opacity=".3" />
                        </Border.Effect>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background"
                                    Value="{DynamicResource ButtonMouseOverColor}" />

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background"
                                    Value="{DynamicResource ButtonPressedColor}">

                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: Icon + Text ButtonStyle -->
</ResourceDictionary>